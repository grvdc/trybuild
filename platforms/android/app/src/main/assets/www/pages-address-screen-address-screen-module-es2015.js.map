{"version":3,"sources":["./src/app/pages/address-screen/address-screen.page.html","./src/app/pages/address-screen/address-screen-routing.module.ts","./src/app/pages/address-screen/address-screen.module.ts","./src/app/pages/address-screen/address-screen.page.scss","./src/app/pages/address-screen/address-screen.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gyE;;;;;;;;;;;;;;;;;;;ACAyC;AACc;AAEG;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAMF,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACM;AACF;AAEA;AAEoC;AAEvB;AAW1D,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IATnC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,6FAA8B;SAC/B;QACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;ACnBpC,+DAA+D,mK;;;;;;;;;;;;;;;;;;ACAb;AACS;AAO3D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAc1B,YACQ,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAbxB,YAAO,GAAG;YACR,IAAI,EAAG,EAAE;YACT,MAAM,EAAG,EAAE;YACX,QAAQ,EAAG,EAAE;YACb,OAAO,EAAG,EAAE;YACZ,QAAQ,EAAG,EAAE;YACb,IAAI,EAAG,EAAE;YACT,KAAK,EAAG,EAAE;YACV,GAAG,EAAG,EAAE;YACR,OAAO,EAAG,EAAE;YACZ,SAAS,EAAG,EAAE;SACf;IAID,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED,UAAU;QACR,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,YAAY,GAAE,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE;YAChD,YAAY,CAAC,IAAI,CAAC;gBAChB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,OAAO,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC;aACvB,CAAC;YACF,mCAAmC;SACpC;aAAM;YACL,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3D,IAAI,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,EAAC,EAAE;gBACrC,IAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAC;oBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAChC,OAAO,IAAI,CAAC,KAAK,CAAC;iBACnB;YACH,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEtC,IAAG,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACnB,YAAY,CAAC,IAAI,CAAC;oBAChB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,OAAO,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC;iBACvB,CAAC;aACH;YACD,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;YACzB,6BAA6B;YAC7B,kCAAkC;YAClC,uCAAuC;YACvC,OAAO;YACP,KAAK;YACL,kCAAkC;SACnC;QAEC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,GAAG;YACb,IAAI,EAAG,EAAE;YACT,MAAM,EAAG,EAAE;YACX,QAAQ,EAAG,EAAE;YACb,OAAO,EAAG,EAAE;YACZ,QAAQ,EAAG,EAAE;YACb,IAAI,EAAG,EAAE;YACT,KAAK,EAAG,EAAE;YACV,GAAG,EAAG,EAAE;YACR,OAAO,EAAG,EAAE;YACZ,SAAS,EAAG,EAAE;SACf;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACzC,CAAC;CACF;;YAvEmB,sDAAM;;AAfb,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,wKAAyC;;KAE1C,CAAC;2EAgBkB,sDAAM;GAfb,iBAAiB,CAsF7B;AAtF6B","file":"pages-address-screen-address-screen-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar class=\\\"bg-color\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button class=\\\"white\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Add New Address</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ng-container>\\n    <ion-card>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Name</ion-label>\\n        <ion-input name=\\\"name\\\" [(ngModel)]=\\\"address.name\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Mobile Number</ion-label>\\n        <ion-input name=\\\"mobile\\\" [(ngModel)]=\\\"address.mobile\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n          <ion-label position=\\\"stacked\\\">Locality</ion-label>\\n          <ion-input name=\\\"locality\\\" [(ngModel)]=\\\"address.locality\\\"></ion-input>\\n       </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Address</ion-label>\\n        <ion-textarea name=\\\"add1\\\" [(ngModel)]=\\\"address.address\\\"></ion-textarea>\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Landmark</ion-label>\\n        <ion-input name=\\\"landmark\\\" [(ngModel)]=\\\"address.landmark\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">City</ion-label>\\n        <ion-input name=\\\"city\\\" [(ngModel)]=\\\"address.city\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">State</ion-label>\\n        <ion-input name=\\\"state\\\" [(ngModel)]=\\\"address.state\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">ZIP code</ion-label>\\n        <ion-input name=\\\"zip\\\" [(ngModel)]=\\\"address.zip\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Country</ion-label>\\n        <ion-input name=\\\"country\\\" [(ngModel)]=\\\"address.country\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n          <ion-label position=\\\"stacked\\\">Alternate Phone</ion-label>\\n          <ion-input name=\\\"alternate\\\" [(ngModel)]=\\\"address.alternate\\\"></ion-input>\\n        </ion-item>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-button (click)=\\\"addAddress()\\\">Continue</ion-button>\\n      <ion-button (click)=\\\"reset()\\\">Reset</ion-button>\\n\\n    </ion-card>\\n  </ng-container>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddressScreenPage } from './address-screen.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddressScreenPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddressScreenPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddressScreenPageRoutingModule } from './address-screen-routing.module';\n\nimport { AddressScreenPage } from './address-screen.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddressScreenPageRoutingModule\n  ],\n  declarations: [AddressScreenPage]\n})\nexport class AddressScreenPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkZHJlc3Mtc2NyZWVuL2FkZHJlc3Mtc2NyZWVuLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-address-screen',\n  templateUrl: './address-screen.page.html',\n  styleUrls: ['./address-screen.page.scss'],\n})\nexport class AddressScreenPage implements OnInit {\n  login: any;\n  address = {\n    name : '',\n    mobile : '',\n    locality : '',\n    address : '',\n    landmark : '',\n    city : '',\n    state : '',\n    zip : '',\n    country : '',\n    alternate : '',\n  }\n    constructor(   \n    private router: Router\n    ) { \n  }\n\n  ngOnInit() {\n    this.getLoginEmail();\n    console.log(\"login\", this.login);\n  }\n\n  getLoginEmail(){\n    this.login = localStorage.getItem(\"login\");\n  }\n\n  addAddress(){\n    let address = [];\n    let localAddress =[];\n    if (!JSON.parse(localStorage.getItem('address'))) {\n      localAddress.push({\n        email: this.login,\n        address:[this.address],\n      })\n      // localAddress.push(this.address);\n    } else {\n      localAddress = JSON.parse(localStorage.getItem('address'));\n      let test = localAddress.filter((item)=>{\n        if(item.email == this.login){\n          item.address.push(this.address);\n          return item.email;\n        }\n      });\n      console.log('testlength',test.length);\n\n      if(test.length == 0 ){\n        localAddress.push({\n          email: this.login,\n          address:[this.address],\n        })\n      }\n      console.log('test',test);\n      // localAddress.map((item)=>{\n      //   if(item.email == this.login){\n      //     item.address.push(this.address);\n      //   } \n      // })\n      // localAddress.push(this.address)\n    }\n\n      localStorage.setItem(\"address\",JSON.stringify(localAddress));\n     this.reset();\n      \n     this.router.navigate(['all-address']);\n  }\n\n  reset(){\n    this.address = {\n      name : '',\n      mobile : '',\n      locality : '',\n      address : '',\n      landmark : '',\n      city : '',\n      state : '',\n      zip : '',\n      country : '',\n      alternate : '',\n    }  \n  }\n\n  continue(){\n    this.router.navigate(['invoice-page']);\n  }\n}\n"],"sourceRoot":""}